(()=>{"use strict";const t=class{constructor(t=0,s=0,i=100,h=100,e="blue"){this.x=t,this.y=s,this.width=i,this.height=h,this.color=e}moveBy(t,s){this.x+=t,this.y+=s}moveTo(t,s){this.x=t,this.y=s}render(t){t.beginPath(),t.rect(this.x,this.y,this.width,this.height),t.fillStyle=this.color,t.fill(),t.closePath()}},s=class extends t{constructor(t=0,s=0,i=2,h=-1,e=10,l="red"){super(t,s,0,0,l),this.dx=i,this.dy=-h,this.radius=e,this.color=l}moveBall(){this.moveBy(this.dx,this.dy)}render(t){t.beginPath(),t.arc(this.x,this.y,this.radius,0,2*Math.PI),t.fillStyle=this.color,t.fill(),t.closePath()}},i=class extends t{constructor(t,s,i=75,h=20,e="blue"){super(t,s,i,h,e),this.status=1}},h=class extends t{constructor(t,s,i=75,h=20,e="blue",l=7){super(t,s,i,h,e),this.speed=l,this.color=e}},e=class extends t{constructor(t,s,i,h="blue",e="16px Arial"){super(s,i,0,0,h),this.text=t,this.value=0,this.font=e}render(t){t.font=this.font,t.fillStyle=this.color,t.fillText(`${this.text} ${this.value}`,this.x,this.y)}},l=document.getElementById("myCanvas"),a=l.getContext("2d");new class{constructor(t,l){this.canvas=t,this.ctx=l,this.brickRowCount=3,this.brickColumnCount=5,this.width=75,this.height=20,this.padding=10,this.offsetTop=30,this.offsetLeft=30,this.color="blue",this.ballRadius=10,this.ballColor="blue",this.ball=new s(100,200,2,-2,this.ballRadius,this.ballColor),this.paddleHeight=15,this.paddleWidth=100,this.paddleSpeed=7,this.paddleColor="blue",this.paddleX=(t.width-this.width)/2,this.paddleY=t.height-this.height,this.paddle=new h(this.paddleX,this.paddleY,this.paddleWidth,this.paddleHeight,this.paddleSpeed,this.paddleColor),this.bricks=new class{constructor(t,s,i,h,e,l,a,d){this.cols=t,this.rows=s,this.bricks=[],this.width=i,this.height=h,this.padding=e,this.offsetTop=l,this.offsetLeft=a,this.color=d,this.totalBricks=0,this.initializeBricks()}initializeBricks(){const t=["#FF0000","#FF9900","#FFFF00","#66FF33","#00FFFF","#0000FF","#6600FF","#6600CC","#CC0099","#FF0066"];for(let s=0;s<this.cols;s+=1){this.bricks[s]=[];for(let h=0;h<this.rows;h+=1){const e=s*(this.width+this.padding)+this.offsetLeft,l=h*(this.height+this.padding)+this.offsetTop;this.bricks[s][h]=new i(e,l,this.width,this.height,t[this.totalBricks%t.length]),this.totalBricks+=1}}}render(t){for(let s=0;s<this.cols;s+=1)for(let i=0;i<this.rows;i+=1){const h=this.bricks[s][i];1===h.status&&h.render(t)}}}(this.brickColumnCount,this.brickRowCount,this.width,this.height,this.padding,this.offsetTop,this.offsetLeft,this.color),this.scoreLabel=new e("Score: ",8,20),this.livesLabel=new e("Lives: ",t.width-65,20),this.rightPressed=!1,this.leftPressed=!1,this.setup(),this.draw()}resetBallAndPaddle(){this.ball.x=this.canvas.width/2,this.ball.y=this.canvas.height-30,this.ball.dx=2,this.ball.dy=-2,this.paddle.x=this.paddleX}randomColor(){this.hexString="#";for(let t=0;t<6;t+=1)this.hexString+="1234567890ABCDEF"[Math.floor(16*Math.random())];return this.hexString}collisionDetection(){for(let t=0;t<this.bricks.cols;t+=1)for(let s=0;s<this.bricks.rows;s+=1){const i=this.bricks.bricks[t][s];1===i.status&&this.ball.x>i.x-this.ball.radius&&this.ball.x<i.x+this.width+this.ball.radius&&this.ball.y>i.y-this.ball.radius&&this.ball.y<i.y+this.height+this.ball.radius&&(this.ball.dy=Math.abs(this.ball.dy)+.2,this.ball.dx<0?this.ball.dx-=.1:this.ball.dx+=.1,this.ball.color=this.randomColor(),i.status=0,this.scoreLabel.value+=1,this.paddle.width-=3,console.log(this.bricks.totalBricks),this.scoreLabel.value===this.bricks.totalBricks&&(alert(`You win! Your final score is ${this.scoreLabel.value} points.`),document.location.reload()))}}movePaddle(){this.rightPressed&&this.paddle.x<this.canvas.width-this.paddle.width?this.paddle.moveBy(7,0):this.leftPressed&&this.paddle.x>0&&this.paddle.moveBy(-7,0)}collisionsWithCanvasAndPaddle(){(this.ball.x+this.ball.dx>this.canvas.width-this.ball.radius||this.ball.x+this.ball.x<this.ball.radius)&&(this.ball.dx=-this.ball.dx,this.ball.color=this.randomColor()),this.ball.y+this.ball.dy<this.ball.radius?(this.ball.dy=-this.ball.dy,this.ball.color=this.randomColor()):this.ball.y+this.ball.dy>this.canvas.height-this.ball.radius-this.paddle.height&&(this.ball.x>this.paddle.x&&this.ball.x<this.paddle.x+this.paddle.width?(this.ball.dy=-(this.ball.dy+1),this.ball.color=this.randomColor(),this.paddle.color=this.randomColor()):(this.livesLabel.value-=1,0===this.livesLabel.value?(alert(`GAME OVER... YOUR SCORE WAS ${this.scoreLabel.value} POINTS`),document.location.reload()):this.resetBallAndPaddle()))}keyDownHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!0:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!0)}keyUpHandler(t){"Right"===t.key||"ArrowRight"===t.key?this.rightPressed=!1:"Left"!==t.key&&"ArrowLeft"!==t.key||(this.leftPressed=!1)}mouseMoveHandler(t){this.relativeX=t.clientX-this.canvas.offsetLeft,this.relativeX>0&&this.relativeX<this.canvas.width-this.paddle.width/2&&this.paddle.moveTo(this.relativeX-this.paddle.width/2,this.paddleY)}draw(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const t=this.ctx.createLinearGradient(0,0,this.canvas.width,this.canvas.height);t.addColorStop(0,"violet"),t.addColorStop(.25,"pink"),t.addColorStop(.5,"black"),t.addColorStop(.75,"pink"),t.addColorStop(1,"violet"),this.ctx.fillStyle=t,this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ball.render(this.ctx),this.paddle.render(this.ctx),this.bricks.render(this.ctx),this.scoreLabel.render(this.ctx),this.livesLabel.render(this.ctx),this.collisionDetection(),this.ball.moveBall(),this.movePaddle(),this.collisionsWithCanvasAndPaddle(),requestAnimationFrame((()=>{this.draw()}))}setup(){this.livesLabel.value=3,this.resetBallAndPaddle(),document.addEventListener("keydown",(t=>{this.keyDownHandler(t)}),!1),document.addEventListener("keyup",(t=>{this.keyUpHandler(t)}),!1),document.addEventListener("mousemove",(t=>{this.mouseMoveHandler(t)}),!1)}}(l,a)})();